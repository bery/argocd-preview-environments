{{- if not .Values.env.TYPEORM_RUN_MIGRATIONS_ON_START -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: api-pij
  labels:
    app: api-pij
  annotations:
    helm.sh/hook: {{ .Values.helmHook | quote }}
    helm.sh/hook-delete-policy: {{ .Values.helmHookDeletePolicy | quote }}
    argocd.argoproj.io/hook: {{ .Values.argoHook | quote }}
    argocd.argoproj.io/sync-wave: "-1"
    argocd.argoproj.io/hook-delete-policy: BeforeHookCreation,HookSucceeded
spec:
  backoffLimit: 5
  template:
    metadata:
      name: api-pij
      labels:
        app: api-pij
    spec:
      restartPolicy: Never
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ required "A valid .Values.image.tag entry required!" .Values.image.tag }}"
          command: ["/bin/bash"]
          args:
            - -c
            - "npm run migration:run"
          envFrom:
          - configMapRef:
              name: {{ include "app.fullname" . }}-ev
          {{- include "common.deployment.secretref" . | nindent 10 }}
          {{ if .Values.helmHooks.databaseMigrations.useAdminUser }}
          env:
          - name: TYPEORM_USERNAME
            valueFrom:
              secretKeyRef:
                name: {{ template "app.fullname" . }}-sec
                key: TYPEORM_ADMIN_USERNAME
          - name: TYPEORM_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ template "app.fullname" . }}-sec
                key: TYPEORM_ADMIN_PASSWORD
          - name: PGPASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ template "app.fullname" . }}-sec
                key: TYPEORM_ADMIN_PASSWORD
          {{ end }}

          imagePullPolicy: {{ .Values.image.pullPolicy }}
{{- end }}
