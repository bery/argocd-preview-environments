# Default values for app.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

## dependency config ##
localstack:
  enabled: false
  service:
    type: ClusterIP
redis:
  enabled: false
  auth:
    password: "redis-password"
  sentinel:
    enabled: false
  architecture: "standalone"
  master:
    persistence:
      enabled: true
    disableCommands: []
postgresql:
  enabled: false
  global:
    imageRegistry: "$AWS_ACCOUNT_ID.dkr.ecr.eu-central-1.amazonaws.com"
  image:
    pullPolicy: IfNotPresent
    tag: "latest-partial"
    repository: "sandbox/postgres"
    debug: true

  service:
    port: 5432
  primary:
    persistence:
      enabled: true
      size: 120Gi
    resources:
      limits:
        memory: 8Gi
        cpu: "4"
      requests:
        memory: 6Gi
        cpu: "2"
    livenessProbe:
      initialDelaySeconds: 450
    readinessProbe:
      initialDelaySeconds: 450
    startupProbe:
      initialDelaySeconds: 450
    extraEnvVars:
    - name: POSTGRES_JOBS
      value: "4"
    - name: POSTGRES_PG_RESTORE_PARAMS
      value: "--exit-on-error -Fc --disable-triggers --no-owner --verbose --jobs=4"
    extendedConfiguration: |-
      min_wal_size=200MB
      max_wal_senders=0
      archive_mode=off
      wal_level=minimal
      max_wal_size=2GB
      work_mem=32MB
      shared_buffers=1GB
      maintenance_work_mem=1GB
      full_page_writes=off
      autovacuum=off
      wal_buffers=-1
  auth:
    enablePostgresUser: true
    postgresPassword: postgres
    # username: xbery_dev
    # password: postgres
    database: postgres

## end dependency config ##

helmHookDeletePolicy: before-hook-creation

helmHook: "pre-upgrade"
helmHooks:
  databaseMigrations:
    useAdminUser: true
argoHook: "Sync"

replicaCount: 3

image:
  repository: "hub.docker.com/kad"
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations:
  prometheus.io/scrape: 'true'
  prometheus.io/path: '/metrics'
  prometheus.io/port: '3012'

podSecurityContext: {}
# fsGroup: 2000

securityContext: {}
# capabilities:
#   drop:
#   - ALL
# readOnlyRootFilesystem: true
# runAsNonRoot: true
# runAsUser: 1000

service:
  type: ClusterIP
  # port: 80 #DEPRECATED - use env.PORT ports instead

commonAnnotations:
  reloader.stakater.com/auto: "true"

initContainers:
  enabled: true
ingress:
  enabled: true
  className: "alb"
  annotations:
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/certificate-arn: "arn:aws:acm:eu-central-1:$AWS_ACCOUNT_ID:certificate/1d88a512-95ce-486d-91f3-94e49f1b2fb0"
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
    alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
    alb.ingress.kubernetes.io/healthcheck-path: /plugin/hosts/745
    alb.ingress.kubernetes.io/group.name: api
    # alb.ingress.kubernetes.io/subnets: subnet-0ec7f46e618e51a05, subnet-0bb368911dcba7c08, subnet-068df146bd3ba2ed3
    alb.ingress.kubernetes.io/target-group-attributes: deregistration_delay.timeout_seconds=30
  hosts:
  - host: chart-example.local
    paths:
    - path: /*
      pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

terminationGracePeriodSeconds: 30

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: "1"
    memory: 2Gi
  requests:
    cpu: "200m"
    memory: 256Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

podAffinityPreset: ""
## @param podAntiAffinityPreset Pod anti-affinity preset. Ignored if "affinity" is set. Allowed values: "soft" or "hard"
## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
##
podAntiAffinityPreset: soft

## Node affinity preset
## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
##
nodeAffinityPreset:
  ## @param nodeAffinityPreset.type Node affinity preset type. Ignored if "affinity" is set. Allowed values: "soft" or "hard"
  ##
  type: ""
  ## @param nodeAffinityPreset.key Node label key to match Ignored if "affinity" is set.
  ## E.g.
  ## key: "kubernetes.io/e2e-az-name"
  ##
  key: ""
  ## @param nodeAffinityPreset.values Node label values to match. Ignored if "affinity" is set.
  ## E.g.
  ## values:
  ##   - e2e-az1
  ##   - e2e-az2
  ##
  values: []

## @param affinity Affinity for pod assignment. Evaluated as a template
## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
## Note: podAffinityPreset, podAntiAffinityPreset, and  nodeAffinityPreset will be ignored when it's set
##
affinity: {}

secrets:
  enabled: true
  secretStoreRef:
    kind: ClusterSecretStore
    name: cluster-secretstore
  prefix: "preview"
  envOverrides: {}
  envSecretDatabaseMap:
    TYPEORM_PASSWORD: remote-aurora-aws-typeorm-application-password
    TYPEORM_USERNAME: remote-aurora-aws-typeorm-application-username
    TYPEORM_ADMIN_PASSWORD: remote-aurora-aws-typeorm-app-admin-password
    TYPEORM_ADMIN_USERNAME: remote-aurora-aws-typeorm-app-admin-username
    TYPEORM_PORT: remote-aurora-aws-typeorm-port
    TYPEORM_HOST: remote-aurora-aws-typeorm-host
  envSecretReplicaDatabaseMap:
    TYPEORM_PASSWORD: remote-typeorm-password
    TYPEORM_USERNAME: remote-typeorm-username
    TYPEORM_ADMIN_USERNAME: remote-typeorm-username
    TYPEORM_ADMIN_PASSWORD: remote-typeorm-password
    TYPEORM_PORT: remote-typeorm-port
    TYPEORM_HOST: remote-typeorm-host
  envSecretMap:
    AWS_MAIN_ACCESS_KEY_ID: aws-main-access-key-id
    AWS_MAIN_SECRET_ACCESS_KEY: aws-main-secret-access-key
    AWS_OREGON_ACCESS_KEY_ID: aws-oregon-access-key-id
    AWS_OREGON_SECRET_ACCESS_KEY: aws-oregon-secret-access-key
env:
  DATABASE_NAME: bery
  PROJECT_NAME: xbery
